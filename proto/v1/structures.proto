syntax = "proto3";

package beget.domainRegistrar.v1.structures;

message Zone {
    // Название доменной зоны
    string name = 1;

    // Цены на доменную зону в разных валютах
    repeated ZonePrice zone_price = 2;

    // Возможно ли регистрировать интернационализованное доменное имя в данной доменной зоне
    bool is_idn = 3;

    // Минимальный период регистрации доменного имени в данной доменной зоне
    uint32 min_period = 4;

    // Максимальный период регистрации доменного имени в данной доменной зоне
    uint32 max_period = 5;

    // Возможность установки приватной персоны для данной доменной зоны
    bool private_person = 6;

    // Обязательна ли установка приватной персоны для данной доменной зоны
    bool is_private_person_required = 7;

    // Тип доменной зоны
    ZoneType type = 8;

    enum ZoneType {
        // Общий домен верхнего уровня
        CCTLD = 0;

        // Национальный домен верхнего уровня
        GTLD = 1;
    }

    message ZonePrice {
        // Валюта
        Currency currency = 1;

        // Стоимость регистрации и продления для обычных доменных имён
        Cost cost = 2;

        // Стоимость регистрации и продления для интернационализованных доменных имён
        Cost cost_idn = 3;

        enum Currency {
            RUR = 0;
            USD = 1;
            EUR = 2;
        }

        message Cost {
            // Стоимость регистрации доменного имени в данной доменной зоне
            float price = 2;

            // Стоимость продления доменного имени в данной доменной зоне
            float price_renew = 3;
        }
    }
}

message RegistrationOrder {
    // ID заявки
    uint64 id = 1;

    // Дата создания заявки на регистрацию
    // DateTime::W3C
    // @Link("http://php.net/manual/ru/class.datetime.php#datetime.constants.w3c")
    string created_at = 2;

    // Дата регистрация домена
    // DateTime::W3C
    // @Link("http://php.net/manual/ru/class.datetime.php#datetime.constants.w3c")
    string registered_at = 3;

    // Доменное имя
    string fqdn = 4;

    // Период регистрации в годах
    uint32 period = 5;

    // Статус заявки на регистрацию
    Status status = 6;

    PayType pay_type = 7;

    enum Status {
        PENDING = 0;
        CANCELED = 1;
        REGISTERED = 2;
    }
}

message RenewOrder {
    // Id заявки
    uint64 id = 1;

    // Дата создания заявки на продление
    // DateTime::W3C
    // @Link("http://php.net/manual/ru/class.datetime.php#datetime.constants.w3c")
    string created_at = 2;

    // Дата продления домена
    // DateTime::W3C
    // @Link("http://php.net/manual/ru/class.datetime.php#datetime.constants.w3c")
    string renewed_at = 3;

    // Доменное имя
    string fqdn = 4;

    // Период регистрации в годах
    uint32 period = 5;

    // Статус заявки на продление
    Status status = 6;

    PayType pay_type = 7;

    enum Status {
        PENDING = 0;
        CANCELED = 1;
        RENEWED = 2;
    }
}

message ReceiveOrder {
    // Id заявки
    uint64 id = 1;

    // Дата создания заявки на перенос
    // DateTime::W3C
    // @Link("http://php.net/manual/ru/class.datetime.php#datetime.constants.w3c")
    string created_at = 2;

    // Дата изменения статуса заявки
    // DateTime::W3C
    // @Link("http://php.net/manual/ru/class.datetime.php#datetime.constants.w3c")
    string updated_at = 3;

    // Доменное имя
    string fqdn = 4;

    // Статус заявки на продление
    Status status = 6;

    PayType pay_type = 7;

    enum Status {
        PENDING = 0;
        REJECTED = 1;
        TRANSFFERED = 2;
    }
}

enum PayType {
    // Списание с баланса пользователя
    BALANCE = 0;
    // Списание бонусов
    BONUS = 1;
}